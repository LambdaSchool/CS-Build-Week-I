{"version":3,"sources":["components/Game/Game.js","components/Game/Cell.js","components/Controls/ControlsButton.js","components/Controls/Controls.js","App.js","index.js"],"names":["Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawCanvas","canvas","refs","game","ctx","getContext","grid","slice","width","height","canvasSize","strokeStyle","fillStyle","gridColor","x","numCells","cellSize","moveTo","lineTo","y","stroke","length","isAlive","fillRect","onGameClick","e","preventDefault","console","log","componentDidUpdate","prevProps","componentDidMount","randomize","state","buttonCommand","_this2","react_default","a","createElement","ref","className","onClick","Component","Cell","arguments","undefined","create","kill","toggleState","isClickable","ControlsButton","onButtonClick","icon","isShowingPlay","setState","componentWillUpdate","newProps","index_es","Controls","onStepClick","step","onPlayStopClick","playStop","onClearClick","clear","onRandomizeClick","timer","ControlsButton_ControlsButton","generationNumber","library","add","faPlay","faStop","faStepForward","faEraser","faQuestion","App","createGrid","NUM_CELLS","clearInterval","generationInterval","generate","newGrid","neighbors","getNeighborCount","cell","cellX","cellY","neighborCount","stop","play","checkIsClear","setInterval","GENERATION_RATE","Math","random","isClear","clientX","offsetLeft","app","clientY","offsetTop","floor","CELL_SIZE","CANVAS_SIZE","GRID_COLOR","Game_Game","Controls_Controls","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ba1f5e9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buttonCommand: null\n    };\n  }\n\n  drawCanvas = () => {\n    const canvas = this.refs.game;\n    const ctx = this.refs.game.getContext('2d');\n    const grid = this.props.grid.slice();\n    const lineOffset = 0.5;\n    const fillOffset = 1;\n\n    canvas.width = canvas.height = this.props.canvasSize;\n    ctx.strokeStyle = ctx.fillStyle = this.props.gridColor;\n    \n    for (let x = lineOffset; x < this.props.numCells * this.props.cellSize; x += this.props.cellSize) {\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this.props.numCells * this.props.cellSize);\n    }\n\n    for (let y = lineOffset; y < this.props.numCells * this.props.cellSize; y += this.props.cellSize) {\n      ctx.moveTo(0, y);\n      ctx.lineTo(this.props.numCells * this.props.cellSize, y);\n    }\n    ctx.stroke();\n    \n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        const cell = grid[x][y];\n        if (cell.isAlive) {\n          ctx.fillRect(x * this.props.cellSize + fillOffset, \n            y * this.props.cellSize + fillOffset,\n            this.props.cellSize - fillOffset,\n            this.props.cellSize - fillOffset);\n        }\n      }\n    }\n\n  }\n\n  onGameClick = e => {\n    e.preventDefault();\n    this.props.onGameClick(e, this.refs.game);\n    console.log('game click');\n  };\n\n  componentDidUpdate = prevProps => {\n    this.drawCanvas();\n  }\n\n  componentDidMount = () => {\n    this.drawCanvas();\n    this.props.randomize();\n  }\n\n  render() {\n    return (\n      <canvas ref=\"game\" className=\"game\" onClick={e => this.onGameClick(e)}></canvas>\n    );\n  }\n}\n","export default class Cell {\n  constructor(isAlive = false, isClickable = false) {\n    this.isAlive = this.isAlive;\n    this.isClickable = this.isClickable;\n  }\n\n  create = () => {\n    this.isAlive = true;\n  }\n\n  kill = () => {\n    this.isAlive = false;\n  }\n\n  toggleState = () => {\n    if (this.isAlive) {\n      this.isAlive = false;\n    } else {\n      this.isAlive = true;\n    }\n  }\n\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class ControlsButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      icon: this.props.icon\n    };\n  }\n\n  onButtonClick = e => {\n    e.preventDefault();\n    this.props.onButtonClick();\n    if (this.state.icon === 'play' || this.state.icon === 'stop') {\n      if (this.props.isShowingPlay) {\n        this.setState({icon: 'play'});\n      } else {\n        this.setState({icon: 'stop'});\n      }\n    }\n  };\n\n  componentWillUpdate = newProps => {\n    if(newProps.isShowingPlay !== this.props.isShowingPlay) {\n      if (this.state.icon === 'play' || this.state.icon === 'stop') {\n        if (this.props.isShowingPlay) {\n          this.setState({icon: 'play'});\n        } else {\n          this.setState({icon: 'stop'});\n        }\n      }\n    }\n  }\n\n  render() {\n    let icon;\n    if (this.state.icon === 'play') {\n      icon = <FontAwesomeIcon icon={this.state.icon} />;\n    } else {\n      icon = <FontAwesomeIcon icon={this.state.icon} />;\n    }\n\n    return (\n      <button className='controls__button' onClick={e => this.onButtonClick(e)}>\n        {icon}\n      </button>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ControlsButton from './ControlsButton';\n\nexport default class Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: undefined\n    };\n  }\n\n  onStepClick = e => {\n    this.props.step();\n    console.log('step click');\n  };\n\n  onPlayStopClick = e => {\n    this.props.playStop();\n    console.log('play/stop click');\n  };\n\n  onClearClick = e => {\n    this.props.clear();\n    console.log('clear click');\n  };\n\n  onRandomizeClick = e => {\n    this.props.randomize();\n    console.log('randomize click');\n  };\n\n  render() {\n    return (\n      <div className=\"controls\">\n        <div className=\"controls__button-container\">\n          <ControlsButton icon=\"stop\" onButtonClick={this.onPlayStopClick} isShowingPlay={this.props.isShowingPlay} />\n          <ControlsButton icon=\"step-forward\" onButtonClick={this.onStepClick} isShowingPlay={this.props.isShowingPlay} />\n          <ControlsButton icon=\"eraser\" onButtonClick={this.onClearClick} isShowingPlay={this.props.isShowingPlay} />\n          <ControlsButton icon=\"question\" onButtonClick={this.onRandomizeClick} isShowingPlay={this.props.isShowingPlay} />\n        </div>\n        <div className=\"controls__generation\"><span className=\"controls__generation-number\">{this.props.generationNumber}</span> Generation</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Game from './components/Game';\nimport Cell from './components/Game/Cell';\nimport Controls from './components/Controls';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPlay, faStop, faStepForward, faEraser, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add([faPlay, faStop, faStepForward, faEraser, faQuestion])\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.NUM_CELLS = 58;\n    this.CANVAS_SIZE = 580;\n    this.CELL_SIZE = 10;\n    this.GRID_COLOR = '#dfdfdf';\n    this.GENERATION_RATE = 50;\n    this.state = {\n      generationInterval: undefined,\n      generationNumber: 0,\n      grid: this.createGrid(),\n      isShowingPlay: false\n    };\n  }\n\n  createGrid = () => {\n    const grid = [];\n\n    for (let x = 0; x < this.NUM_CELLS; x++) {\n      grid[x] = [];\n      for (let y = 0; y < this.NUM_CELLS; y++) {\n        grid[x][y] = new Cell();\n      }\n    }\n\n    return grid;\n  }\n\n  step = () => {\n    clearInterval(this.state.generationInterval);\n    this.setState({generationInterval: undefined});\n    this.generate();\n  }\n\n\tgenerate = () => {\n\t\tlet newGrid = [];\n\t\tfor (let x = 0; x < this.state.grid.length; x++) {\n\t\t\tnewGrid[x] = [];\n\t\t}\n\t\t\n\t\tfor (let x = 0; x < this.state.grid.length; x++) {\n\t\t\tfor (let y = 0; y < this.state.grid.length; y++) {\n\t\t\t\tlet neighbors = this.getNeighborCount(x, y);\n        let cell = new Cell();\n        \n\t\t\t\tif (this.state.grid[x][y].isAlive) {\n\t\t\t\t\tif (neighbors === 2 || neighbors === 3) {\n            cell.create();\n          } else if (neighbors < 2 || neighbors > 3) {\n            cell.kill();\n          }\n\t\t\t\t} else {\n\t\t\t\t\tif (neighbors === 3) {\n            cell.create();\n          }\n        }\n        newGrid[x][y] = cell;\n\t\t\t}\n\t\t}\n\t\t\n    this.setState({grid: newGrid, generationNumber: this.state.generationNumber + 1});\n  }\n  \n  getNeighborCount = (cellX, cellY) => {\n\t\tlet neighborCount = 0;\n\t\t\n\t\tfor (let x = cellX - 1; x <= cellX + 1; x++) {\n\t\t\tfor (let y = cellY - 1; y <= cellY + 1; y++) {\n\t\t\t\tif (x === cellX && y === cellY) {\n          continue;\n        }\n\t\t\t\tif (x < 0 || x >= this.state.grid.length || y < 0 || y >= this.state.grid[x].length) {\n          continue;\n        }\t\n\t\t\t\tif (this.state.grid[x][y].isAlive) {\n          neighborCount++;\n        }\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn neighborCount;\n\t}\n\n  playStop = () => {\n    if (this.state.isShowingPlay) {\n      this.stop();\n    } else {\n      this.play();\n    }\n  }\n\n  stop = () => {\n    clearInterval(this.state.generationInterval);\n    this.setState({generationInterval: undefined, isShowingPlay: false});\n  }\n\n  play = () => {\n    if (this.checkIsClear()) {\n      this.randomize();\n    }\n\n    this.setState({generationInterval: setInterval(this.generate, this.GENERATION_RATE), isShowingPlay: true});\n  }\n\n  randomize = () => {\n    const randomizeLimit = 0.15;\n    let grid = this.state.grid.slice();\n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        let cell = new Cell();\n        if (Math.random() < randomizeLimit) {\n          cell.create();\n        } \n        grid[x][y] = cell;\n      }\n    }\n    this.setState({grid: grid, generationNumber: 0});\n  }\n\n  clear = () => {\n    let grid = this.state.grid.slice();\n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        let cell = new Cell();\n        cell.kill();\n        grid[x][y] = cell;\n      }\n    }\n    this.stop();\n    this.setState({grid: grid, generationNumber: 0});\n  }\n\n  checkIsClear = () => {\n    let grid = this.state.grid.slice();\n    var isClear = true;\n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        let cell = grid[x][y];\n        if (cell.isAlive) {\n          isClear = false;\n          break;\n        }\n      }\n    }\n\n    return isClear;\n  }\n\n  onGameClick = (e, game) => {\n    let x = e.clientX - game.offsetLeft - this.refs.app.offsetLeft;\n    let y = e.clientY - game.offsetTop - this.refs.app.offsetTop;\n    x = Math.floor(x / this.CELL_SIZE);\n    y = Math.floor(y / this.CELL_SIZE);\n    this.toggleState(x, y);\n  };\n\n  toggleState = (cellX, cellY) => {\n    let grid = this.state.grid.slice();\n    let cell = grid[cellX][cellY];\n    cell.toggleState();\n    this.setState({grid: grid});\n\t}\n\n  componentDidMount = () => {\n    this.play();\n  }\n\n  render() {\n    return (\n      <div ref=\"app\" className=\"app\">\n        <Game grid={this.state.grid} numCells={this.NUM_CELLS} canvasSize={this.CANVAS_SIZE} cellSize={this.CELL_SIZE} gridColor={this.GRID_COLOR} randomize={this.randomize} onGameClick={this.onGameClick} />\n        <Controls step={this.step} clear={this.clear} playStop={this.playStop} randomize={this.randomize} isShowingPlay={this.state.isShowingPlay} generationNumber={this.state.generationNumber} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}