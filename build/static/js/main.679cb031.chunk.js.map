{"version":3,"sources":["Two.js","ConThree.js","Main.js","AppRouter.js","index.js"],"names":["Box","selectBox","_this","props","row","col","react_default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","gridFull","map","rowIndex","item","colIndex","boxId","concat","Two_Box","key","style","Buttons","handleSelect","evt","_this2","gridSize","ButtonToolbar","playButton","pauseButton","clear","slow","fast","seed","DropdownButton","title","onSelect","MenuItem","eventKey","Two","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","arrayClone","arr","JSON","parse","stringify","state","rowArr","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","g","g2","i","rows","j","neighbors","prevState","generations","grid","Array","fill","size","Two_Buttons","Two_Grid","ConThree","start","bind","assertThisInitialized","stop","animate","mount","clientWidth","height","clientHeight","scene","THREE","camera","renderer","antialias","cubeGeometry","material","color","cube","lineGeometry","vertices","push","lineMaterial","line","position","z","add","setClearColor","setSize","appendChild","domElement","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","rotation","x","y","renderScene","window","render","ref","Main","margin","AppRouter","BrowserRouter","Link","to","Route","path","exact","component","ReactDOM","src_AppRouter","document","getElementById"],"mappings":"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","file":"static/js/main.679cb031.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { ButtonToolbar, MenuItem, DropdownButton } from 'react-bootstrap'\n    \n    class Box extends React.Component {\n        selectBox = () => {\n            this.props.selectBox(this.props.row, this.props.col)\n        }\n    \n        render() {\n            return (\n                <div\n                    className={this.props.boxClass}\n                    id={this.props.id}\n                    onClick={this.selectBox}\n    \n                />\n            )\n        }    \n    }\n    \n    const Grid = props => {\n            const width = props.cols * 14\n            let boxClass = \"\"\n    \n            const rowsArr = props.gridFull.map((rowsArr, rowIndex) => \n                rowsArr.map((item, colIndex) => {\n                    const boxId = `${rowIndex}_${colIndex}`\n    \n                    boxClass = props.gridFull[rowIndex][colIndex] ? \"box on\": \"box off\"\n                    return (\n                        <Box\n                            boxClass={boxClass}\n                            key={boxId}\n                            boxId={boxId}\n                            row={rowIndex}\n                            col={colIndex}\n                            selectBox={props.selectBox}\n                        />\n                    )\n                })\n            )\n    \n    \n            return (\n                <div className=\"grid\" style={{width}}>\n                    {rowsArr}\n                </div>\n            )\n    }\n    \n    class Buttons extends React.Component { // Should this be a stateless functional component?\n        handleSelect = evt => {\n            this.props.gridSize(evt)\n        }\n    \n        render() {\n            return (\n                <div className=\"center\">\n                    <ButtonToolbar>\n                        <button className=\"btn btn-default\" onClick={this.props.playButton}>\n                            Play\n                        </button>\n                        <button className=\"btn btn-default\" onClick={this.props.pauseButton}>\n                            Pause\n                        </button>\n                        <button className=\"btn btn-default\" onClick={this.props.clear}>\n                            Clear\n                        </button>\n                        <button className=\"btn btn-default\" onClick={this.props.slow}>\n                            Slow\n                        </button>\n                        <button className=\"btn btn-default\" onClick={this.props.fast}>\n                            Fast\n                        </button>\n                        <button className=\"btn btn-default\" onClick={this.props.seed}>\n                            Seed\n                        </button>\n                        <DropdownButton\n                        title=\"Grid Size\"\n                        id=\"size-menu\"\n                        onSelect={this.handleSelect}\n                        >\n                        <MenuItem eventKey=\"1\">20x10</MenuItem>\n                        <MenuItem eventKey=\"2\">50x30</MenuItem>\n                        <MenuItem eventKey=\"3\">70x50</MenuItem>\n                        </DropdownButton>\n                    </ButtonToolbar>\n                </div>\n            )\n        }\n    }\n    \n    class Two extends React.Component {\n        constructor() {\n            super()\n            this.speed = 100\n            this.rows = 30\n            this.cols = 50\n    \n            this.state = {\n                generations: 0,\n                gridFull: Array(this.rows).fill(Array(this.cols).fill(false))\n                //gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n            }\n        }\n\n        arrayClone =(arr) => {\n            return JSON.parse(JSON.stringify(arr))\n        }\n    \n    \n        selectBox = (row, col) => {\n            const gridFull = this.state.gridFull.map((rowArr, rowIndex) => \n                rowArr.map(\n                    (item, colIndex) => (rowIndex === row && colIndex === col ? !item : item)\n                )\n            )\n    \n            this.setState(() => ({gridFull}));\n            // let gridCopy = arrayClone(this.state.gridFull)\n            // gridCopy[row][col] = !gridCopy[row][col]\n    \n            // this.setState({gridFull: gridCopy})\n        }\n    \n        seed = () => {\n            const gridFull = this.state.gridFull.map(rowArr =>\n                rowArr.map(() => Math.floor(Math.random() * 4) === 1)\n              );\n    \n            this.setState(() => ({ gridFull }));\n            // let gridCopy = arrayClone(this.state.gridFull)\n            // for (let i=0; i<this.rows; i++)\n            // {\n            //     for (let j = 0; j <this.cols; j++)\n            //     {\n            //         if (Math.floor(Math.random() * 4) === 1)\n            //         {\n            //             gridCopy[i][j] = true\n            //         }\n            //     }\n            // }\n            // this.setState({gridFull: gridCopy})\n        }\n    \n        playButton = () => {\n            clearInterval(this.intervalId)\n            this.intervalId = setInterval(this.play, this.speed)\n        }\n    \n        pauseButton = () => {\n            clearInterval(this.intervalId)\n        }\n    \n        play = () => {\n            let g = this.state.gridFull // here g is a copy of the grid\n            let g2 = this.arrayClone(this.state.gridFull) // a second copy of the grid\n    \n            for (let i = 0; i < this.rows; i++)\n            {\n                for (let j = 0; j < this.cols; j++)\n                {\n                    // Could also do this with switch statements I think, just don't add any breaks until the end\n                    let neighbors = 0\n                    if (i > 0) if (g[i - 1][j]) neighbors++;\n                    if (i > 0 && j > 0) if (g[i - 1][j - 1]) neighbors++;\n                    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) neighbors++;\n                    if (j < this.cols - 1) if (g[i][j + 1]) neighbors++;\n                    if (j > 0) if (g[i][j - 1]) neighbors++;\n                    if (i < this.rows - 1) if (g[i + 1][j]) neighbors++;\n                    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) neighbors++;\n                    if (i < this.rows - 1 && this.cols - 1) if (g[i + 1][j + 1]) neighbors++;\n                    if (g[i][j] && (neighbors < 2 || neighbors > 3)) g2[i][j] = false;\n                    if (!g[i][j] && neighbors === 3) g2[i][j] = true;\n                }\n            }\n            this.setState(prevState => ({\n                    gridFull: g2,\n                    generations: prevState.generations + 1\n                }))\n        }\n    \n        componentDidMount() {\n            this.seed()\n            this.playButton()\n        }\n    \n        slow = () => {\n            this.speed = 1000\n            this.playButton()\n        }\n    \n        fast = () => {\n            this.speed = 100\n            this.playButton()\n        }\n    \n        clear = () => {\n            const grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    \n            this.setState(() => ({\n                gridFull: grid,\n                generations: 0\n            }))\n        }\n    \n        gridSize = size => {\n            switch(size) {\n                case \"1\":\n                    this.cols = 20\n                    this.rows = 10\n                    break\n                case \"2\":\n                    this.cols = 50\n                    this.rows = 30\n                    break\n                default:\n                    this.cols = 70\n                    this.rows = 50\n            }\n            this.clear()\n        }\n    \n        render() {\n            return(\n                <div>\n                    <h1>The Game of Life</h1>\n                    <Buttons\n                        playButton={this.playButton}\n                        pauseButton={this.pauseButton}\n                        slow={this.slow}\n                        fast={this.fast}\n                        clear={this.clear}\n                        seed={this.seed}\n                        gridSize={this.gridSize}\n                    />\n                    <Grid\n                        gridFull={this.state.gridFull}\n                        rows={this.rows}\n                        cols={this.cols}\n                        selectBox={this.selectBox}\n                    />\n                    <h2>Generations: {this.state.generations}</h2>\n                </div>\n            )\n        }\n}\n\n\n\nexport default Two","import React from 'react'\nimport './index.css'\n//import { ButtonToolbar, MenuItem, DropdownButton } from 'react-bootstrap'\nimport * as THREE from 'three'\n\n\n\nclass ConThree extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.animate = this.animate.bind(this)\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      width / height,\n      0.1,\n      1000\n    )\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    const cubeGeometry = new THREE.BoxGeometry(1, 1, 1)\n    const material = new THREE.MeshBasicMaterial({ color: '#433F81' })\n    const cube = new THREE.Mesh(cubeGeometry, material)\n    const lineGeometry = new THREE.Geometry()\n    lineGeometry.vertices.push(new THREE.Vector3(-10, 0, 0));\n    lineGeometry.vertices.push(new THREE.Vector3(0, 10, 0));\n    lineGeometry.vertices.push(new THREE.Vector3(10, 0, 0));\n\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 'red' });\n\n    const line = new THREE.Line(lineGeometry, lineMaterial);\n\n\n\n    camera.position.z = 4\n    scene.add(cube)\n    scene.add(line)\n    renderer.setClearColor('#000000')\n    renderer.setSize(width, height)\n\n    this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n    this.material = material\n    this.cube = cube\n    this.line = line\n\n    this.mount.appendChild(this.renderer.domElement)\n    this.start()\n  }\n\n  componentWillUnmount() {\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  animate() {\n    this.cube.rotation.x += 0.01\n    this.cube.rotation.y += 0.01\n\n    this.renderScene()\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: '400px', height: '400px' }}\n        ref={(mount) => { this.mount = mount }}\n      />\n    )\n  }\n}\n  \n\n\n\nexport default ConThree","import React from 'react'\nimport './index.css'\n\nconst Main = () => {\n    return (\n        <div>\n        <h1 className=\"welcome-info\">Welcome to Conway's Game of Life</h1>\n        <h2 className=\"welcome-info\">This is an interactive implementation of the classic Cellular Automata</h2>\n        <h2 className=\"welcome-info\">These are the rules</h2>\n        <ol style={{width: '50%', margin: 'auto'}}>\n            <li className=\"rules\">\n            Any live cell with fewer than two live neighbors dies, as if by underpopulation.\n            </li>\n            <li className=\"rules\">\n            Any live cell with two or three live neighbors lives on to the next generation.\n            </li>\n            <li className=\"rules\">\n            Any live cell with more than three live neighbors dies, as if by overpopulation.\n            </li>\n            <li className=\"rules\">\n            Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n            </li>\n        </ol>\n        </div>\n    )\n}\n\n\nexport default Main","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Two from './Two'\nimport ConThree from './ConThree'\nimport Main from './Main'\n\nconst AppRouter = () => (\n    <Router>\n        <div>\n            <h1>Conway's Game of Life</h1>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/two\" className=\"nav-links\">View 2D Simulation</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/three\" className=\"nav-links\">View 3D Simulation</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/\" className=\"nav-links\">Back to Info Page</Link>\n                    </li>\n                </ul>\n            </nav>\n\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/two\" component={Two} />\n            <Route path=\"/three\" component={ConThree} />\n        </div>\n    </Router>\n)\n\nexport default AppRouter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}